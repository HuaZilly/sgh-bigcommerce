{"version":3,"sources":["webpack:///./assets/js/theme/search.js","webpack:///./assets/js/theme/common/models/forms.js","webpack:///./assets/js/theme/common/form-utils.js","webpack:///./assets/js/theme/common/url-utils.js","webpack:///./assets/js/theme/global/compare-products.js","webpack:///./assets/js/theme/catalog.js","webpack:///./assets/js/theme/common/faceted-search.js"],"names":["Search","_CatalogPage","apply","arguments","_proto","prototype","formatCategoryTreeForJSTree","node","_this","nodeData","text","data","id","metadata","state","selected","opened","children","forEach","childNode","push","showProducts","url","urlUtils","replaceParams","window","location","href","section","this","$contentResultsContainer","addClass","$productListingContainer","removeClass","$facetedSearchContainer","$productSideCart","$productOptions","$productPagination","$","searchGoToUrl","context","enableSideCart","sideCart","showContent","onReady","_this2","compareProducts","urls","$searchForm","$categoryTreeContainer","find","Url","parse","treeData","length","initFacetedSearch","onSortBySubmit","bind","hooks","on","cardAddToCart","gridSwitcher","collapsibleFactory","event","preventDefault","query","validator","initValidation","bindValidation","categoryTree","categoryTreeData","createCategoryTree","selectedCategoryIds","jstree","get_selected","check","remove","_step","_iterator","_createForOfIteratorHelperLoose","done","categoryId","value","input","type","name","append","loadTreeNodes","cb","_this3","ajax","selectedCategoryId","prefix","headers","BCData","csrf_token","formattedResults","dataNode","$container","_this4","treeOptions","core","themes","icons","checkbox","three_state","plugins","_this5","$searchHeading","$searchCount","requestOptions","template","productListing","sidebar","heading","productCount","config","product_results","limit","searchProductsPerPage","showMore","facetedSearch","FacetedSearch","content","html","animate","scrollTop","$form","nod","submit","$element","add","selector","validate","errorMessage","performCheck","areAll","CatalogPage","forms","email","test","password","notEmpty","inputTagNames","classifyForm","formSelector","options","$inputs","join","_options$formFieldCla","formFieldClass","each","__","specificClassName","$input","$formField","parent","tagName","prop","toLowerCase","className","inputType","_includes","_camelCase","_capitalize","classifyInput","insertStateHiddenField","$stateField","stateFieldAttrs","$field","fieldId","match","getFieldId","after","Validators","setEmailValidation","field","val","setPasswordValidation","passwordSelector","password2Selector","requirements","isOptional","$password","passwordValidations","result","RegExp","alpha","numeric","minlength","error","setMinMaxPriceValidation","selectors","errorSelector","fieldsetSelector","maxPriceSelector","minPriceSelector","configure","form","preventSubmit","successClass","setMessageOptions","errorSpan","setStateCountryValidation","cleanUpStateValidation","$fieldClassElement","Object","keys","classes","hasClass","getUrl","pathname","search","goToUrl","history","pushState","document","title","trigger","params","param","parsed","hasOwnProperty","format","buildQueryString","queryData","key","out","Array","isArray","ndx","substring","updateCounterNav","counter","$link","urlContext","is","attr","compare","products","$checked","$compareLink","_map","element","compareCounter","item","product","currentTarget","$clickedCompareLink","checked","index","indexOf","splice","decrementCounter","showAlertModal","_PageManager","queryParams","serialize","split","page","PageManager","callback","defaultOptions","accordionToggleSelector","blockerSelector","clearFacetSelector","componentSelector","facetNavListSelector","priceRangeErrorSelector","priceRangeFieldsetSelector","priceRangeFormSelector","priceRangeMaxPriceSelector","priceRangeMinPriceSelector","showMoreToggleSelector","facetedSearchFilterItems","modal","modalFactory","modalOpen","_extend","collapsedFacets","collapsedFacetItems","initPriceValidator","navList","collapseFacetItems","accordionToggle","collapsible","isCollapsed","targetId","setTimeout","collapseAllFacets","onpopstate","onStateChange","onToggleClick","onAccordionToggle","onClearFacet","onFacetClick","onRangeSubmit","filterFacetItems","bindEvents","refreshView","restoreCollapsedFacets","restoreCollapsedFacetItems","updateView","show","api","getPage","err","hide","Error","expandFacetItems","$navList","_without","hasMoreResults","_union","toggleFacetItems","getMoreFacetResults","facet","facetUrl","list_all","response","open","updateContent","$items","expandFacet","$accordionToggle","collapseFacet","close","expandAllFacets","priceRangeValidator","_this6","_this7","unbindEvents","off","stopPropagation","$toggle","toggleClass","constants","VALID","decodeURI"],"mappings":"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","file":"theme-bundle.chunk.10.js","sourcesContent":["import { hooks } from '@bigcommerce/stencil-utils';\nimport CatalogPage from './catalog';\nimport FacetedSearch from './common/faceted-search';\nimport compareProducts from './global/compare-products';\nimport urlUtils from './common/url-utils';\nimport Url from 'url';\nimport collapsibleFactory from './common/collapsible';\nimport 'jstree';\nimport nod from './common/nod';\nimport cardAddToCart from './f/card-add-to-cart';\nimport sideCart from './f/side-cart';\nimport gridSwitcher from './f/grid-list-switcher';\n\nexport default class Search extends CatalogPage {\n    formatCategoryTreeForJSTree(node) {\n        const nodeData = {\n            text: node.data,\n            id: node.metadata.id,\n            state: {\n                selected: node.selected,\n            },\n        };\n\n        if (node.state) {\n            nodeData.state.opened = node.state === 'open';\n            nodeData.children = true;\n        }\n\n        if (node.children) {\n            nodeData.children = [];\n            node.children.forEach((childNode) => {\n                nodeData.children.push(this.formatCategoryTreeForJSTree(childNode));\n            });\n        }\n\n        return nodeData;\n    }\n\n    showProducts() {\n        const url = urlUtils.replaceParams(window.location.href, {\n            section: 'product',\n        });\n\n        this.$contentResultsContainer.addClass('category--hide');\n\n        this.$productListingContainer.removeClass('category--hide');\n        this.$facetedSearchContainer.removeClass('category--hide');\n        this.$productSideCart.removeClass('category--hide');\n        this.$productOptions.removeClass('category--hide');\n        this.$productPagination.removeClass('category--hide');\n\n        $('[data-content-results-toggle]').removeClass('navBar-action-color--active');\n        $('[data-content-results-toggle]').addClass('navBar-action');\n\n        $('[data-product-results-toggle]').removeClass('navBar-action');\n        $('[data-product-results-toggle]').addClass('navBar-action-color--active');\n\n        urlUtils.searchGoToUrl(url);\n\n        if (this.context.enableSideCart) {\n            sideCart();\n        }\n    }\n\n    showContent() {\n        const url = urlUtils.replaceParams(window.location.href, {\n            section: 'content',\n        });\n\n        this.$contentResultsContainer.removeClass('category--hide');\n\n        this.$productListingContainer.addClass('category--hide');\n        this.$facetedSearchContainer.addClass('category--hide');\n        this.$productSideCart.addClass('category--hide');\n        this.$productOptions.addClass('category--hide');\n        this.$productPagination.addClass('category--hide');\n\n        $('[data-product-results-toggle]').removeClass('navBar-action-color--active');\n        $('[data-product-results-toggle]').addClass('navBar-action');\n\n        $('[data-content-results-toggle]').removeClass('navBar-action');\n        $('[data-content-results-toggle]').addClass('navBar-action-color--active');\n\n        urlUtils.searchGoToUrl(url);\n\n        if (this.context.enableSideCart) {\n            sideCart();\n        }\n    }\n\n    onReady() {\n        compareProducts(this.context.urls);\n\n        const $searchForm = $('[data-advanced-search-form]');\n        const $categoryTreeContainer = $searchForm.find('[data-search-category-tree]');\n        const url = Url.parse(window.location.href, true);\n        const treeData = [];\n\n        this.$contentResultsContainer = $('#search-results-content');\n\n        this.$productListingContainer = $('#product-listing-container');\n        this.$facetedSearchContainer = $('#faceted-search-container');\n        this.$productSideCart = $('.product-sidecart');\n        this.$productOptions = $('#product-options');\n        this.$productPagination = $('#product-pagination');\n\n        // Init faceted search\n        if ($('#facetedSearch').length > 0) {\n            this.initFacetedSearch();\n        } else {\n            this.onSortBySubmit = this.onSortBySubmit.bind(this);\n            hooks.on('sortBy-submitted', this.onSortBySubmit);\n        }\n\n        if (this.context.enableSideCart) {\n            sideCart();\n        }\n\n        cardAddToCart();\n\n        gridSwitcher(this.context);\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        $('[data-product-results-toggle]').on('click', event => {\n            event.preventDefault();\n            this.showProducts();\n        });\n\n        $('[data-content-results-toggle]').on('click', event => {\n            event.preventDefault();\n            this.showContent();\n        });\n\n        if (this.$productListingContainer.find('li.productCard').length === 0 || url.query.section === 'content') {\n            this.showContent();\n        } else {\n            this.showProducts();\n        }\n\n        const validator = this.initValidation($searchForm)\n            .bindValidation($searchForm.find('#search_query_adv'));\n\n        this.context.categoryTree.forEach((node) => {\n            treeData.push(this.formatCategoryTreeForJSTree(node));\n        });\n\n        this.categoryTreeData = treeData;\n        this.createCategoryTree($categoryTreeContainer);\n\n        $searchForm.on('submit', event => {\n            const selectedCategoryIds = $categoryTreeContainer.jstree().get_selected();\n\n            if (!validator.check()) {\n                return event.preventDefault();\n            }\n\n            $searchForm.find('input[name=\"category\\[\\]\"]').remove();\n\n            for (const categoryId of selectedCategoryIds) {\n                const input = $('<input>', {\n                    type: 'hidden',\n                    name: 'category[]',\n                    value: categoryId,\n                });\n\n                $searchForm.append(input);\n            }\n        });\n    }\n\n    loadTreeNodes(node, cb) {\n        $.ajax({\n            url: '/remote/v1/category-tree',\n            data: {\n                selectedCategoryId: node.id,\n                prefix: 'category',\n            },\n            headers: {\n                'x-xsrf-token': window.BCData && window.BCData.csrf_token ? window.BCData.csrf_token : '',\n            },\n        }).done(data => {\n            const formattedResults = [];\n\n            data.forEach((dataNode) => {\n                formattedResults.push(this.formatCategoryTreeForJSTree(dataNode));\n            });\n\n            cb(formattedResults);\n        });\n    }\n\n    createCategoryTree($container) {\n        const treeOptions = {\n            core: {\n                data: (node, cb) => {\n                    // Root node\n                    if (node.id === '#') {\n                        cb(this.categoryTreeData);\n                    } else {\n                        // Lazy loaded children\n                        this.loadTreeNodes(node, cb);\n                    }\n                },\n                themes: {\n                    icons: true,\n                },\n            },\n            checkbox: {\n                three_state: false,\n            },\n            plugins: [\n                'checkbox',\n            ],\n        };\n\n        $container.jstree(treeOptions);\n    }\n\n    initFacetedSearch() {\n        const $productListingContainer = $('#product-listing-container');\n        const $facetedSearchContainer = $('#faceted-search-container');\n        const $searchHeading = $('#search-results-heading');\n        const $searchCount = $('#search-results-product-count');\n        const productsPerPage = this.context.searchProductsPerPage;\n        const requestOptions = {\n            template: {\n                productListing: 'f/search/product-listing',\n                sidebar: 'search/sidebar',\n                heading: 'f/search/heading',\n                productCount: 'search/product-count',\n            },\n            config: {\n                product_results: {\n                    limit: productsPerPage,\n                },\n            },\n            showMore: 'search/show-more',\n        };\n\n        this.facetedSearch = new FacetedSearch(requestOptions, (content) => {\n            $productListingContainer.html(content.productListing);\n            $facetedSearchContainer.html(content.sidebar);\n            $searchHeading.html(content.heading);\n            $searchCount.html(content.productCount);\n\n            $('html, body').animate({\n                scrollTop: 0,\n            }, 100);\n\n            cardAddToCart();\n            gridSwitcher(this.context);\n\n            if (this.context.enableSideCart) {\n                sideCart();\n            }\n        });\n    }\n\n    initValidation($form) {\n        this.$form = $form;\n        this.validator = nod({\n            submit: $form,\n        });\n\n        return this;\n    }\n\n    bindValidation($element) {\n        if (this.validator) {\n            this.validator.add({\n                selector: $element,\n                validate: 'presence',\n                errorMessage: $element.data('errorMessage'),\n            });\n        }\n\n        return this;\n    }\n\n    check() {\n        if (this.validator) {\n            this.validator.performCheck();\n            return this.validator.areAll('valid');\n        }\n\n        return false;\n    }\n}\n","const forms = {\n    email(value) {\n        const re = /^.+@.+\\..+/;\n        return re.test(value);\n    },\n\n    /**\n     * Validates a password field\n     * @param value\n     * @returns {boolean}\n     */\n    password(value) {\n        return this.notEmpty(value);\n    },\n\n    /**\n     * validates if a field is empty\n     * @param value\n     * @returns {boolean}\n     *\n     */\n    notEmpty(value) {\n        return value.length > 0;\n    },\n};\n\nexport default forms;\n","import _ from 'lodash';\nimport nod from './nod';\nimport forms from './models/forms';\n\nconst inputTagNames = [\n    'input',\n    'select',\n    'textarea',\n];\n\n/**\n * Apply class name to an input element on its type\n * @param {object} input\n * @param {string} formFieldClass\n * @return {object} Element itself\n */\nfunction classifyInput(input, formFieldClass) {\n    const $input = $(input);\n    const $formField = $input.parent(`.${formFieldClass}`);\n    const tagName = $input.prop('tagName').toLowerCase();\n\n    let className = `${formFieldClass}--${tagName}`;\n    let specificClassName;\n\n    // Input can be text/checkbox/radio etc...\n    if (tagName === 'input') {\n        const inputType = $input.prop('type');\n\n        if (_.includes(['radio', 'checkbox', 'submit'], inputType)) {\n            // ie: .form-field--checkbox, .form-field--radio\n            className = `${formFieldClass}--${_.camelCase(inputType)}`;\n        } else {\n            // ie: .form-field--input .form-field--inputText\n            specificClassName = `${className}${_.capitalize(inputType)}`;\n        }\n    }\n\n    // Apply class modifier\n    return $formField\n        .addClass(className)\n        .addClass(specificClassName);\n}\n\n/**\n * Apply class name to each input element in a form based on its type\n * @example\n * // Before\n * <form id=\"form\">\n *     <div class=\"form-field\">\n *         <input type=\"text\">\n *     </div>\n *     <div class=\"form-field\">\n *         <select>...</select>\n *     </div>\n * </form>\n *\n * classifyForm('#form', { formFieldClass: 'form-field' });\n *\n * // After\n * <div class=\"form-field form-field--input form-field--inputText\">...</div>\n * <div class=\"form-field form-field--select\">...</div>\n *\n * @param {string|object} formSelector - selector or element\n * @param {object} options\n * @return {jQuery} Element itself\n */\nexport function classifyForm(formSelector, options = {}) {\n    const $form = $(formSelector);\n    const $inputs = $form.find(inputTagNames.join(', '));\n\n    // Obtain options\n    const { formFieldClass = 'form-field' } = options;\n\n    // Classify each input in a form\n    $inputs.each((__, input) => {\n        classifyInput(input, formFieldClass);\n    });\n\n    return $form;\n}\n\n/**\n * Get id from given field\n * @param {object} $field JQuery field object\n * @return {string}\n */\nfunction getFieldId($field) {\n    const fieldId = $field.prop('name').match(/(\\[.*\\])/);\n\n    if (fieldId && fieldId.length !== 0) {\n        return fieldId[0];\n    }\n\n    return '';\n}\n\n/**\n * Insert hidden field after State/Province field\n * @param {object} $stateField JQuery field object\n */\nfunction insertStateHiddenField($stateField) {\n    const fieldId = getFieldId($stateField);\n    const stateFieldAttrs = {\n        type: 'hidden',\n        name: `FormFieldIsText${fieldId}`,\n        value: '1',\n    };\n\n    $stateField.after($('<input />', stateFieldAttrs));\n}\n\nconst Validators = {\n    /**\n     * Sets up a new validation when the form is dirty\n     * @param validator\n     * @param field\n     */\n    setEmailValidation: (validator, field) => {\n        if (field) {\n            validator.add({\n                selector: field,\n                validate: (cb, val) => {\n                    const result = forms.email(val);\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a valid email.',\n            });\n        }\n    },\n\n    /**\n     * Validate password fields\n     * @param validator\n     * @param passwordSelector\n     * @param password2Selector\n     * @param requirements\n     * @param isOptional\n     */\n    setPasswordValidation: (validator, passwordSelector, password2Selector, requirements, isOptional) => {\n        const $password = $(passwordSelector);\n        const passwordValidations = [\n            {\n                selector: passwordSelector,\n                validate: (cb, val) => {\n                    const result = val.length;\n\n                    if (isOptional) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a password.',\n            },\n            {\n                selector: passwordSelector,\n                validate: (cb, val) => {\n                    const result = val.match(new RegExp(requirements.alpha))\n                        && val.match(new RegExp(requirements.numeric))\n                        && val.length >= requirements.minlength;\n\n                    // If optional and nothing entered, it is valid\n                    if (isOptional && val.length === 0) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: requirements.error,\n            },\n            {\n                selector: password2Selector,\n                validate: (cb, val) => {\n                    const result = val.length;\n\n                    if (isOptional) {\n                        return cb(true);\n                    }\n\n                    cb(result);\n                },\n                errorMessage: 'You must enter a password.',\n            },\n            {\n                selector: password2Selector,\n                validate: (cb, val) => {\n                    const result = val === $password.val();\n\n                    cb(result);\n                },\n                errorMessage: 'Your passwords do not match.',\n            },\n        ];\n\n        validator.add(passwordValidations);\n    },\n\n    /**\n     * Validate password fields\n     * @param {Nod} validator\n     * @param {Object} selectors\n     * @param {string} selectors.errorSelector\n     * @param {string} selectors.fieldsetSelector\n     * @param {string} selectors.formSelector\n     * @param {string} selectors.maxPriceSelector\n     * @param {string} selectors.minPriceSelector\n     */\n    setMinMaxPriceValidation: (validator, selectors) => {\n        const {\n            errorSelector,\n            fieldsetSelector,\n            formSelector,\n            maxPriceSelector,\n            minPriceSelector,\n        } = selectors;\n\n        validator.configure({\n            form: formSelector,\n            preventSubmit: true,\n            successClass: '_', // KLUDGE: Don't apply success class\n        });\n\n        validator.add({\n            errorMessage: 'Min price must be less than max. price.',\n            selector: minPriceSelector,\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\n        });\n\n        validator.add({\n            errorMessage: 'Min price must be less than max. price.',\n            selector: maxPriceSelector,\n            validate: `min-max:${minPriceSelector}:${maxPriceSelector}`,\n        });\n\n        validator.add({\n            errorMessage: 'Max. price is required.',\n            selector: maxPriceSelector,\n            validate: 'presence',\n        });\n\n        validator.add({\n            errorMessage: 'Min. price is required.',\n            selector: minPriceSelector,\n            validate: 'presence',\n        });\n\n        validator.add({\n            errorMessage: 'Input must be greater than 0.',\n            selector: [minPriceSelector, maxPriceSelector],\n            validate: 'min-number:0',\n        });\n\n        validator.setMessageOptions({\n            selector: [minPriceSelector, maxPriceSelector],\n            parent: fieldsetSelector,\n            errorSpan: errorSelector,\n        });\n    },\n\n    /**\n     * Sets up a new validation when the form is dirty\n     * @param validator\n     * @param field\n     */\n    setStateCountryValidation: (validator, field) => {\n        if (field) {\n            validator.add({\n                selector: field,\n                validate: 'presence',\n                errorMessage: 'The \\'State/Province\\' field cannot be blank.',\n            });\n        }\n    },\n\n    /**\n     * Removes classes from dirty form if previously checked\n     * @param field\n     */\n    cleanUpStateValidation: (field) => {\n        const $fieldClassElement = $((`[data-type=\"${field.data('fieldType')}\"]`));\n\n        Object.keys(nod.classes).forEach((value) => {\n            if ($fieldClassElement.hasClass(nod.classes[value])) {\n                $fieldClassElement.removeClass(nod.classes[value]);\n            }\n        });\n    },\n};\n\nexport { Validators, insertStateHiddenField };\n","import Url from 'url';\n\nconst urlUtils = {\n    getUrl: () => `${window.location.pathname}${window.location.search}`,\n\n    goToUrl: (url) => {\n        window.history.pushState({}, document.title, url);\n        $(window).trigger('statechange');\n    },\n\n    searchGoToUrl: () => {\n        $(window).trigger('statechange');\n    },\n\n    replaceParams: (url, params) => {\n        const parsed = Url.parse(url, true);\n        let param;\n\n        // Let the formatter use the query object to build the new url\n        parsed.search = null;\n\n        for (param in params) {\n            if (params.hasOwnProperty(param)) {\n                parsed.query[param] = params[param];\n            }\n        }\n\n        return Url.format(parsed);\n    },\n\n    buildQueryString: (queryData) => {\n        let out = '';\n        let key;\n        for (key in queryData) {\n            if (queryData.hasOwnProperty(key)) {\n                if (Array.isArray(queryData[key])) {\n                    let ndx;\n\n                    for (ndx in queryData[key]) {\n                        if (queryData[key].hasOwnProperty(ndx)) {\n                            out += `&${key}=${queryData[key][ndx]}`;\n                        }\n                    }\n                } else {\n                    out += `&${key}=${queryData[key]}`;\n                }\n            }\n        }\n\n        return out.substring(1);\n    },\n};\n\nexport default urlUtils;\n","import _ from 'lodash';\nimport { showAlertModal } from './modal';\n\nfunction decrementCounter(counter, item) {\n    const index = counter.indexOf(item);\n\n    if (index > -1) {\n        counter.splice(index, 1);\n    }\n}\n\nfunction incrementCounter(counter, item) {\n    counter.push(item);\n}\n\nfunction updateCounterNav(counter, $link, urlContext) {\n    if (counter.length !== 0) {\n        if (!$link.is('visible')) {\n            $link.addClass('show');\n        }\n        $link.attr('href', `${urlContext.compare}/${counter.join('/')}`);\n        $link.find('span.countPill').html(counter.length);\n    } else {\n        $link.removeClass('show');\n    }\n}\n\nexport default function (urlContext) {\n    let products;\n\n    const $checked = $('body').find('input[name=\"products\\[\\]\"]:checked');\n    const $compareLink = $('a[data-compare-nav]');\n\n    if ($checked.length !== 0) {\n        products = _.map($checked, element => element.value);\n\n        updateCounterNav(products, $compareLink, urlContext);\n    }\n\n    const compareCounter = products || [];\n\n    $('body').on('click', '[data-compare-id]', event => {\n        const product = event.currentTarget.value;\n        const $clickedCompareLink = $('a[data-compare-nav]');\n\n        if (event.currentTarget.checked) {\n            incrementCounter(compareCounter, product);\n        } else {\n            decrementCounter(compareCounter, product);\n        }\n\n        updateCounterNav(compareCounter, $clickedCompareLink, urlContext);\n    });\n\n    $('body').on('submit', '[data-product-compare]', event => {\n        const $this = $(event.currentTarget);\n        const productsToCompare = $this.find('input[name=\"products\\[\\]\"]:checked');\n\n        if (productsToCompare.length <= 1) {\n            showAlertModal('You must select at least two products to compare');\n            event.preventDefault();\n        }\n    });\n\n    $('body').on('click', 'a[data-compare-nav]', () => {\n        const $clickedCheckedInput = $('body').find('input[name=\"products\\[\\]\"]:checked');\n\n        if ($clickedCheckedInput.length <= 1) {\n            showAlertModal('You must select at least two products to compare');\n            return false;\n        }\n    });\n}\n","import PageManager from './page-manager';\nimport urlUtils from './common/url-utils';\nimport Url from 'url';\n\nexport default class CatalogPage extends PageManager {\n    onSortBySubmit(event) {\n        const url = Url.parse(window.location.href, true);\n        const queryParams = $(event.currentTarget).serialize().split('=');\n\n        url.query[queryParams[0]] = queryParams[1];\n        delete url.query.page;\n\n        event.preventDefault();\n        window.location = Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) });\n    }\n}\n","import { hooks, api } from '@bigcommerce/stencil-utils';\nimport _ from 'lodash';\nimport Url from 'url';\nimport urlUtils from './url-utils';\nimport modalFactory from '../global/modal';\nimport collapsibleFactory from './collapsible';\nimport { Validators } from './form-utils';\nimport nod from './nod';\n\n/**\n * Faceted search view component\n */\nclass FacetedSearch {\n    /**\n     * @param {object} requestOptions - Object with options for the ajax requests\n     * @param {function} callback - Function to execute after fetching templates\n     * @param {object} options - Configurable options\n     * @example\n     *\n     * let requestOptions = {\n     *      templates: {\n     *          productListing: 'f/category/product-listing',\n     *          sidebar: 'category/sidebar'\n     *     }\n     * };\n     *\n     * let templatesDidLoad = function(content) {\n     *     $productListingContainer.html(content.productListing);\n     *     $facetedSearchContainer.html(content.sidebar);\n     * };\n     *\n     * let facetedSearch = new FacetedSearch(requestOptions, templatesDidLoad);\n     */\n    constructor(requestOptions, callback, options) {\n        const defaultOptions = {\n            accordionToggleSelector: '#facetedSearch .accordion-navigation, #facetedSearch .facetedSearch-toggle',\n            blockerSelector: '#facetedSearch .blocker',\n            clearFacetSelector: '#facetedSearch .facetedSearch-clearLink',\n            componentSelector: '#facetedSearch-navList',\n            facetNavListSelector: '#facetedSearch .navList',\n            priceRangeErrorSelector: '#facet-range-form .form-inlineMessage',\n            priceRangeFieldsetSelector: '#facet-range-form .form-fieldset',\n            priceRangeFormSelector: '#facet-range-form',\n            priceRangeMaxPriceSelector: '#facet-range-form [name=max_price]',\n            priceRangeMinPriceSelector: '#facet-range-form [name=min_price]',\n            showMoreToggleSelector: '#facetedSearch .accordion-content .toggleLink',\n            facetedSearchFilterItems: '#facetedSearch-filterItems .form-input',\n            modal: modalFactory('#modal')[0],\n            modalOpen: false,\n        };\n\n        // Private properties\n        this.requestOptions = requestOptions;\n        this.callback = callback;\n        this.options = _.extend({}, defaultOptions, options);\n        this.collapsedFacets = [];\n        this.collapsedFacetItems = [];\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        // Init price validator\n        this.initPriceValidator();\n\n        // Show limited items by default\n        $(this.options.facetNavListSelector).each((index, navList) => {\n            this.collapseFacetItems($(navList));\n        });\n\n        // Mark initially collapsed accordions\n        $(this.options.accordionToggleSelector).each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n            const collapsible = $accordionToggle.data('collapsibleInstance');\n\n            if (collapsible.isCollapsed) {\n                this.collapsedFacets.push(collapsible.targetId);\n            }\n        });\n\n        // Collapse all facets if initially hidden\n        // NOTE: Need to execute after Collapsible gets bootstrapped\n        setTimeout(() => {\n            if ($(this.options.componentSelector).is(':hidden')) {\n                this.collapseAllFacets();\n            }\n        });\n\n        // Observe DOM events\n        window.onpopstate = () => {\n            $(window).trigger('statechange');\n        };\n\n        // Observe user events\n        this.onStateChange = this.onStateChange.bind(this);\n        this.onToggleClick = this.onToggleClick.bind(this);\n        this.onAccordionToggle = this.onAccordionToggle.bind(this);\n        this.onClearFacet = this.onClearFacet.bind(this);\n        this.onFacetClick = this.onFacetClick.bind(this);\n        this.onRangeSubmit = this.onRangeSubmit.bind(this);\n        this.onSortBySubmit = this.onSortBySubmit.bind(this);\n        this.filterFacetItems = this.filterFacetItems.bind(this);\n\n        this.bindEvents();\n    }\n\n    // Public methods\n    refreshView(content) {\n        if (content) {\n            this.callback(content);\n        }\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        // Init price validator\n        this.initPriceValidator();\n\n        // Restore view state\n        this.restoreCollapsedFacets();\n        this.restoreCollapsedFacetItems();\n\n        // Bind events\n        this.bindEvents();\n    }\n\n    updateView() {\n        $(this.options.blockerSelector).show();\n\n        api.getPage(urlUtils.getUrl(), this.requestOptions, (err, content) => {\n            $(this.options.blockerSelector).hide();\n\n            if (err) {\n                throw new Error(err);\n            }\n\n            // Refresh view with new content\n            this.refreshView(content);\n        });\n    }\n\n    expandFacetItems($navList) {\n        const id = $navList.attr('id');\n\n        // Remove\n        this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\n    }\n\n    collapseFacetItems($navList) {\n        const id = $navList.attr('id');\n        const hasMoreResults = $navList.data('hasMoreResults');\n\n        if (hasMoreResults) {\n            this.collapsedFacetItems = _.union(this.collapsedFacetItems, [id]);\n        } else {\n            this.collapsedFacetItems = _.without(this.collapsedFacetItems, id);\n        }\n    }\n\n    toggleFacetItems($navList) {\n        const id = $navList.attr('id');\n\n        // Toggle depending on `collapsed` flag\n        if (_.includes(this.collapsedFacetItems, id)) {\n            this.getMoreFacetResults($navList);\n\n            return true;\n        }\n\n        this.collapseFacetItems($navList);\n\n        return false;\n    }\n\n    getMoreFacetResults($navList) {\n        const facet = $navList.data('facet');\n        const facetUrl = urlUtils.getUrl();\n\n        if (this.requestOptions.showMore) {\n            api.getPage(facetUrl, {\n                template: this.requestOptions.showMore,\n                params: {\n                    list_all: facet,\n                },\n            }, (err, response) => {\n                if (err) {\n                    throw new Error(err);\n                }\n\n                this.options.modal.open();\n                this.options.modalOpen = true;\n                this.options.modal.updateContent(response);\n            });\n        }\n\n        this.collapseFacetItems($navList);\n\n        return false;\n    }\n\n    filterFacetItems(event) {\n        const $items = $('.navList-item');\n        const query = $(event.currentTarget).val().toLowerCase();\n\n        $items.each((index, element) => {\n            const text = $(element).text().toLowerCase();\n            if (text.indexOf(query) !== -1) {\n                $(element).show();\n            } else {\n                $(element).hide();\n            }\n        });\n    }\n\n    expandFacet($accordionToggle) {\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n\n        collapsible.open();\n    }\n\n    collapseFacet($accordionToggle) {\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n\n        collapsible.close();\n    }\n\n    collapseAllFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n\n            this.collapseFacet($accordionToggle);\n        });\n    }\n\n    expandAllFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n\n            this.expandFacet($accordionToggle);\n        });\n    }\n\n    // Private methods\n    initPriceValidator() {\n        if ($(this.options.priceRangeFormSelector).length === 0) {\n            return;\n        }\n\n        const validator = nod();\n        const selectors = {\n            errorSelector: this.options.priceRangeErrorSelector,\n            fieldsetSelector: this.options.priceRangeFieldsetSelector,\n            formSelector: this.options.priceRangeFormSelector,\n            maxPriceSelector: this.options.priceRangeMaxPriceSelector,\n            minPriceSelector: this.options.priceRangeMinPriceSelector,\n        };\n\n        Validators.setMinMaxPriceValidation(validator, selectors);\n\n        this.priceRangeValidator = validator;\n    }\n\n    restoreCollapsedFacetItems() {\n        const $navLists = $(this.options.facetNavListSelector);\n\n        // Restore collapsed state for each facet\n        $navLists.each((index, navList) => {\n            const $navList = $(navList);\n            const id = $navList.attr('id');\n            const shouldCollapse = _.includes(this.collapsedFacetItems, id);\n\n            if (shouldCollapse) {\n                this.collapseFacetItems($navList);\n            } else {\n                this.expandFacetItems($navList);\n            }\n        });\n    }\n\n    restoreCollapsedFacets() {\n        const $accordionToggles = $(this.options.accordionToggleSelector);\n\n        $accordionToggles.each((index, accordionToggle) => {\n            const $accordionToggle = $(accordionToggle);\n            const collapsible = $accordionToggle.data('collapsibleInstance');\n            const id = collapsible.targetId;\n            const shouldCollapse = _.includes(this.collapsedFacets, id);\n\n            if (shouldCollapse) {\n                this.collapseFacet($accordionToggle);\n            } else {\n                this.expandFacet($accordionToggle);\n            }\n        });\n    }\n\n    bindEvents() {\n        // Clean-up\n        this.unbindEvents();\n\n        // DOM events\n        $(window).on('statechange', this.onStateChange);\n        $(document).on('click', this.options.showMoreToggleSelector, this.onToggleClick);\n        $(document).on('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\n        $(document).on('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\n        $(this.options.clearFacetSelector).on('click', this.onClearFacet);\n\n        // Hooks\n        hooks.on('facetedSearch-facet-clicked', this.onFacetClick);\n        hooks.on('facetedSearch-range-submitted', this.onRangeSubmit);\n        hooks.on('sortBy-submitted', this.onSortBySubmit);\n    }\n\n    unbindEvents() {\n        // DOM events\n        $(window).off('statechange', this.onStateChange);\n        $(document).off('click', this.options.showMoreToggleSelector, this.onToggleClick);\n        $(document).off('toggle.collapsible', this.options.accordionToggleSelector, this.onAccordionToggle);\n        $(document).off('keyup', this.options.facetedSearchFilterItems, this.filterFacetItems);\n        $(this.options.clearFacetSelector).off('click', this.onClearFacet);\n\n        // Hooks\n        hooks.off('facetedSearch-facet-clicked', this.onFacetClick);\n        hooks.off('facetedSearch-range-submitted', this.onRangeSubmit);\n        hooks.off('sortBy-submitted', this.onSortBySubmit);\n    }\n\n    onClearFacet(event) {\n        const $link = $(event.currentTarget);\n        const url = $link.attr('href');\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        // Update URL\n        urlUtils.goToUrl(url);\n    }\n\n    onToggleClick(event) {\n        const $toggle = $(event.currentTarget);\n        const $navList = $($toggle.attr('href'));\n\n        // Prevent default\n        event.preventDefault();\n\n        // Toggle visible items\n        this.toggleFacetItems($navList);\n    }\n\n    onFacetClick(event, currentTarget) {\n        const $link = $(currentTarget);\n        const url = $link.attr('href');\n\n        event.preventDefault();\n\n        $link.toggleClass('is-selected');\n\n        // Update URL\n        urlUtils.goToUrl(url);\n\n        if (this.options.modalOpen) {\n            this.options.modal.close();\n        }\n    }\n\n    onSortBySubmit(event, currentTarget) {\n        const url = Url.parse(window.location.href, true);\n        const queryParams = $(currentTarget).serialize().split('=');\n\n        url.query[queryParams[0]] = queryParams[1];\n        delete url.query.page;\n\n        event.preventDefault();\n\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: urlUtils.buildQueryString(url.query) }));\n    }\n\n    onRangeSubmit(event, currentTarget) {\n        event.preventDefault();\n\n        if (!this.priceRangeValidator.areAll(nod.constants.VALID)) {\n            return;\n        }\n\n        const url = Url.parse(window.location.href);\n        const queryParams = decodeURI($(currentTarget).serialize());\n\n        urlUtils.goToUrl(Url.format({ pathname: url.pathname, search: `?${queryParams}` }));\n    }\n\n    onStateChange() {\n        this.updateView();\n    }\n\n    onAccordionToggle(event) {\n        const $accordionToggle = $(event.currentTarget);\n        const collapsible = $accordionToggle.data('collapsibleInstance');\n        const id = collapsible.targetId;\n\n        if (collapsible.isCollapsed) {\n            this.collapsedFacets = _.union(this.collapsedFacets, [id]);\n        } else {\n            this.collapsedFacets = _.without(this.collapsedFacets, id);\n        }\n    }\n}\n\nexport default FacetedSearch;\n"],"sourceRoot":""}